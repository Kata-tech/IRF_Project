Az illeszkedési mintát használom a projektemben, mivel két olyan interface-el dolgozok, amelyek elsõre nem kompatibilisek egymással. Ezt a problémát úgy oldom meg, hogy az adapter oda-vissza tudja alakítani a string mátrixot listává, illetve fordítva.

A minta alkalmazása lépésenként:
0. Lépés: Az adatok a csv fájlból listaként vannak tárolva (csvLista).
1. Lépés:
Kialakítok egy adatok.cs osztályt, ahol megadom a különbözõ propertieseket. Ezt azt osztályt fogja késõbb az adapter használni. 
2. Lépés:
Kialakítok egy osszesadat.cs osztályt, amelyben a osszegKiszamol függvénnyel kiszámolja a listából soronként az adott pénzösszeget, amelyet a vendégnek kell fizetnie. Emellett ebben az osztályban fogja exportálni excel-be az összes adatot. 
3. Lépés:
Létrehozok egy interface-t IAdapter néven. Ezen belül lesz két absztrakt függvény: listaAlakit amelynek a bemeneti értéke egy string mátrix lesz, illetve stringAlakit, aminek bemeneti értéke egy lista lesz.
4. Lépés:
Kialakítok egy Adapter.cs osztályt, amit az IAdapter-bõl származtatok. 
A stringAlakit függvényhez beírom a csvListát, és ezt az eredeti listát átalakítom egy string mátrix tömbbe. Ehhez a string mátrixhoz hozzáadom azokat a string adatokat, amelyet a cég felhasználói felületén kapott meg a program. 
Miután kész van a végleges string mátrix, a listaAlakit függvénnyel átalakítom az egész mátrixot egy új listává osszesList néven. Ezt a listát fogja majd az osszesadat.cs osztálynál használni. 


Ezzel a mintával tehát megoldom azt, hogy azt a felületet, amit a cég lát, és ahol megadta az új adatokat stringben, áttudom alakítani listává, így kitudom számolni az összes pénzösszeget (mivel már nem string típusú lesz), valamint tudom exportálni excelbe.
